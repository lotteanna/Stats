install.packages("knitr")
source('~/.active-rstudio-document', echo=TRUE)
veg <- read.csv('veg.csv', strip.white=T)
setwd("~/Documents/Monash/PhD/R/MurrayLoganStatCourse14")
veg <- read.csv('veg.csv', strip.white=T)
head(veg)
ggplot(veg,aes(y=SP1,x=SITE,col=HABITAT)) +
geom_point()
library(ggplot2)
ggplot(veg,aes(y=SP1,x=SITE,col=HABITAT)) +
geom_point()
ggplot(veg,aes(y=SP2,x=SITE,col=HABITAT)) +
geom_point()
#install.packages('reshape',repos="http://cran.ms.unimelb.edu.au/")
install.packages('reshape',repos="http://cran.ms.unimelb.edu.au/")
library(reshape)
veg.long < -melt(veg.id=c("SITE","HABITAT"))
veg.long <- melt(veg.id=c("SITE","HABITAT"))
veg.long <- melt(veg, id=c("SITE","HABITAT"))
ggplot(veg.long,aes(y=value,x=SITE,col=HABITAT)) +
geom_point()+
facet_grid(~variable) +
scale_color_manual("Habitat", values=c(1,2,3))
pairs(veg[,3:10])
veg.pca <- rda(veg[,3:8], scale=T)
library(vegan)
install.packages('vegan',repos="http://cran.ms.unimelb.edu.au/")
library(vegan)
veg.pca <- rda(veg[,3:8], scale=T)
summary(veg.pca)
screeplot(veg.pca)
veg.pca$CA$c
veg.pca$CA$v
biplot(veg.pce,scaling=2)
biplot(veg.pca,scaling=2)
biplot(veg.pca,scaling=1)
newdata.sites <- as.data.frame(scores(veg.pca,choice=1:3,scaling=2)$sites)
newdata.sites$Sites <- rownames(newdata.sites)
newdata.species$Species <- rownames(newdata.species)
newdata.species <- as.data.frame(scores(veg.pca,choice=1:3,scaling=2)$species)
newdata.species$Species <- rownames(newdata.species)
library(grid)
ggplot(newdata.sites,aes(y=PC1,x=PC2)) +
geom_text(aes(labe=Sites)) +
geom_text(data=newdata.species,aes(label=Species),color='red') +
geom_segment(data=newdata.species,aes(yend=0,xend=0),color='red',
arrow=arrow(ends='first',length = unit(0.3,"cm"))) +
theme_classic() + theme(panel.background=element_rect(color='black'))
ggplot(newdata.sites,aes(y=PC1,x=PC2)) +
geom_text(aes(label=Sites)) +
geom_text(data=newdata.species,aes(label=Species),color='red') +
geom_segment(data=newdata.species,aes(yend=0,xend=0),color='red',
arrow=arrow(ends='first',length = unit(0.3,"cm"))) +
theme_classic() + theme(panel.background=element_rect(color='black'))
newdata.sites$Habitat <- veg$HABITAT
g1<-ggplot(newdata.sites,aes(y=PC1,x=PC2)) +
geom_text(aes(label=Habitat,color=Habitat)) +
geom_hline(yintercept=0, linetype='dotted') +
geom_vline(xintercept=0,linetype='dotted') +
coord_equal() +
theme_classic() + theme(panel.background=element_rect(color='black'))
g1
g1 <- g1 +
geom_text(data=newdata.species,aes(label=Species),color='grey') +
geom_segment(data=newdata.species,aes(yend=0,xend=0),color='grey',
arrow=arrow(ends='first',length = unit(0.3,"cm"))) +
f
geom_text(data=newdata.species,aes(label=Species),color='grey') +
geom_segment(data=newdata.species,aes(yend=0,xend=0),color='grey',
arrow=arrow(ends='first',length = unit(0.3,"cm")))
geom_segment(data=newdata.species,aes(yend=0,xend=0),color='grey',
arrow=arrow(ends='first',length = unit(0.3,"cm"))) +
geom_text(data=newdata.species,aes(label=Species),color='grey')
newdata.species
g1 <- g1 +
geom_text(data=newdata.species,aes(label=Species),color='grey')
g1 <- g1 +
geom_segment(data=newdata.species,aes(yend=0,xend=0),color='grey',
arrow=arrow(ends='first',length = unit(0.3,"cm"))) +
geom_text(data=newdata.species,aes(label=Species),color='grey')
g1
veg.scores <- scores(veg.pca,choice=1:3,display="sites")
summary(lm(veg.scores~veg$HABITAT))
Run the model, this will run 3 separate anova's for PC1, 2 and 3
env <- read.csv('env', stip.white=T)
env <- read.csv('env', strip.white=T)
env <- read.csv('env.csv', strip.white=T)
head(env)
summary(veg.lm1 < -lm(veg.scores ~moisture+pH, data=env))
summary(veg.lm1 <- lm(veg.scores ~moisture+pH, data=env))
head(env)
summary(veg.lm1 <- lm(veg.scores ~ Moisture+pH, data=env))
data.envfit <- envfit(veg.pce, env=env$Moisture)
data.envfit <- envfit(veg.pca, env=env$Moisture)
(data.envfit <- envfit(veg.pca, env=env$Moisture))
newdata.env <- as.data.frame(data$envfit$vectors$arrows)
newdata.env <- as.data.frame(data.envfit$vectors$arrows)
g1 + geom_segment(data=newdata.env,aes(yend = 0, xend = 0), color = 'blue',
arrow = arrow(ends = 'first',lengrth = unit(0.3,"cm")))
g1 + geom_segment(data=newdata.env,aes(yend = 0, xend = 0), color = 'blue',
arrow = arrow(ends = 'first',length = unit(0.3,"cm")))
veg.ca < -cca(veg[,3:10])
veg.ca <- cca(veg[,3:10])
summary(veg.ca, display=NULL)
veg.ca <- cca(veg[,3:10])
summary(veg.ca, display=NULL)
veg.scores <- scores(veg.ca,choice=1:2,display="sites")
veg.rda<- rda(veg[,-1:-2]~Moisture+pH,data=env, scale=T)
summary(veg.rda,display=NULL)
biplot(veg.rda)
biplot(veg.rda,scaling=2)
(veg.rda,scaling=2)
(veg.rda,scaling=2)
plot(veg.rda,scaling=2)
anova(veg.rda,by="margin",step=1000) #margin command will seperate test for both constraint variables
anova(veg.rda,step=1000)
``` data.nmds <- metaMDS(data[,-1])
macnally <read.csv('macnally.csv',strip.white=T)
macnally <-read.csv('macnally.csv',strip.white=T)
head(macnally)
macnally.std <- wisconsin(sqrt(macnallY[,1]))
macnally.std <- wisconsin(sqrt(macnally[,1]))
macnally.std <- wisconsin(sqrt(macnally[,-1]))
macnally.dist <- vegdist(macnally.std,"bray")
macnally.mds <- metaMDS(macnally.dist,k=2)
macnally.mds <- metaMDS(macnally.dist,k=2)
macnally.mds <- metaMDS(macnally.dist,k=2)
macnally.mds <- metaMDS(macnally.dist,k=2)
```
macnally.mds <- metaMDS(macnally.dist,k=2)
macnally.mds <- metaMDS(macnally.dist,k=2)
macnally.mds <- metaMDS(macnally.dist,k=3)
macnally.mds <- metaMDS(macnally.dist,k=2)
```
macnally.mds <- metaMDS(macnally.dist,k=2)
```{r}
macnally.mds <- metaMDS(macnally.dist,k=2)
stress.plot(macnally.mds)
stressplot(macnally.mds)
ordiplot(macnally.mds, distplay="sites",type="n")
text(macnally.mds,lab=macnally$HABITAT,
ol=as.numberic(macnally$HABITAT))
ordiplot(macnally.mds, distplay="sites",type="n")
macnally.dist <- vegdist(macnally.std,"bray")
macnally.std <- wisconsin(sqrt(macnally[,-1]))
macnally.dist <- vegdist(macnally.std,"bray")
macnally.mds <- metaMDS(macnally.dist,k=2)
ordiplot(macnally.mds, distplay="sites",type="n")
text(macnally.mds,lab=macnally$HABITAT,
col=as.numberic(macnally$HABITAT))
warnings()
ordiplot(macnally.mds, display="sites",type="n")
text(macnally.mds,lab=macnally$HABITAT,
col=as.numberic(macnally$HABITAT))
ordiplot(macnally.mds, display="sites",type="n")
text(macnally.mds,lab=macnally$HABITAT,
col=as.numeric(macnally$HABITAT))
macnally <-read.csv('macnally.csv')
head(macnally)
str(macnally)
macnally.std <- wisconsin(sqrt(macnally[,-1]))
macnally.dist <- vegdist(macnally.std,"bray")
macnally.mds <- metaMDS(macnally.dist,k=2)
ordihull(macnally.mds, macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon")
macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon",col='grey90')
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon",col='grey90')
macnally <-read.csv('macnally_full.csv')
head(macnally)
```
Do square-root transformation and wisconsin double d
```{r}
macnally.std <- wisconsin(sqrt(macnally[,-1]))
```
Bray-Curtis
```{r}
macnally.dist <- vegdist(macnally.std,"bray")
```
Multi-dimensional scaling
```{r}
macnally.mds <- metaMDS(macnally.dist,k=2)
stressplot(macnally.mds)
ordiplot(macnally.mds, display="sites",type="n")
text(macnally.mds,lab=macnally$HABITAT,
col=as.numeric(macnally$HABITAT))
ordihull(macnally.mds, macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon")
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon",col='grey90')
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.80,lwd=2,draw="polygon",col='grey90')
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.50,lwd=2,draw="polygon",col='grey90')
habitat <- model.matrix(~-1+macnally$HABITAT)
```{r}
macnally <-read.csv('macnally_full.csv')
head(macnally)
```
Do square-root transformation and wisconsin double d
```{r}
macnally.std <- wisconsin(sqrt(macnally[,-1]))
```
Bray-Curtis
```{r}
macnally.dist <- vegdist(macnally.std,"bray")
```
Multi-dimensional scaling
```{r}
macnally.mds <- metaMDS(macnally.dist,k=3)
macnally.mds <- metaMDS(macnally.dist,k=2)
```
View stress-plot
```{r}
stressplot(macnally.mds)
```
Ordination plot
```{r}
ordiplot(macnally.mds, display="sites",type="n")
text(macnally.mds,lab=macnally$HABITAT,
col=as.numeric(macnally$HABITAT))
```
Fit an ordination hull over this plot that will put circles around the habitats
```{r}
ordihull(macnally.mds, macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon")
```
Rather than a hull, we can draw an elipse, as a density measurement. Can do the same with the ordination plots in the PCA.
```{r}
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.95,lwd=2,draw="polygon",col='grey90')
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.80,lwd=2,draw="polygon",col='grey90')
ordiellipse(macnally.mds,
macnally$HABITAT,kind="se",conf=0.50,lwd=2,draw="polygon",col='grey90')
```
But we can't just take these scores and put them in an ANOVA, as they're not independent from each other.
```{r}
habitat <- model.matrix(~-1+macnally$HABITAT)
colnames(habitat) <- gsub("macnally\\$HABITAT","",colnames(habitat))
habitat <- model.matrix(~-1+macnally$HABITAT)
colnames(habitat) <- gsub("macnally\\$HABITAT","",colnames(habitat))
envfit
envfit <- envfit(macnally.mds,env=habitat)
envfit
source('~/.active-rstudio-document', echo=TRUE)
vareveg <- read.csv('vareveg.csv',strip.white=T)
vareenv <- read.csv('vareenv.csv',strip.white=T)
wisconsin(sqrt(varenv[,-1]))
wisconsin(sqrt(vareenv[,-1]))
vareveg.dist <- vegdist(vareveg.std.std,"bray")
vareveg.dist <- vegdist(vareveg.std,"bray")
vareveg.std <- wisconsin(sqrt(vareveg[,-1]))
vareveg.dist <- vegdist(vareveg.std,"bray")
head (vareveg)
vareenv.dist <- vegdist(vareenv.std,"euc")
vareenv.std <- decostand(vareenv[,-1],"standardize")
vareenv.dist <- vegdist(vareenv.std,"euc")
mantel(vareveg.dist,vareenv.dist)
par(mar=c(4,4,0,0))
plot(vareenv.dist,vareveg.dist,ann=F,axes=F,type="n")
points(vareenv.dist,vareveg.dist,pch=16)
axis(1)
axis(2)
box(bty="1")
par(mar=c(4,4,0,0))
plot(vareenv.dist,vareveg.dist,ann=F,axes=F,type="n")
points(vareenv.dist,vareveg.dist,pch=16)
axis(1)
axis(2)
box(bty="1")
str(mantel(vareveg.dist,vareenv.dist))
hist(mantel(vareveg.dist,vareenv.dist))
hist(mantel(vareveg.dist,vareenv.dist))
hist(mantel(vareveg.dist,vareenv.dist)$perm)
adonis(vareveg.dist~P+MG+Fe+Mn+Baresoil+Humdepth,data=vareenv.std)
adonis(vareveg.dist~P+Mg+Fe+Mn+Baresoil+Humdepth,data=vareenv.std)
vif(lm:nrow(vareenv~P+Mg+Fe+Mn+Baresoil+Humdepth,data=vareenv))
library(car)
vif(lm:nrow(vareenv~P+Mg+Fe+Mn+Baresoil+Humdepth,data=vareenv))
vif(lm(1:nrow(vareenv~P+Mg+Fe+Mn+Baresoil+Humdepth,data=vareenv))
vif(lm(1:nrow(vareenv)~P+Mg+Fe+Mn+Baresoil+Humdepth,data=vareenv))
vif(lm(1:nrow(vareenv)~P+Mg+Fe+Mn+Baresoil+Humdepth,data=vareenv))
dune <- read.csv('dune.csv',strip.white=T)
head(dune)
dune.std <- wisconsin(sqrt(dune[,-1]))
dune.dist <- vegdist(dune.std,"bray")
adonis(dune.dist~MANAGEMENT,data=dune)
dung$MANAGEMENT <- factor(dune$MANAGEMENT,
levels=c("NM","SF","BF","HF"))
dune$MANAGEMENT <- factor(dune$MANAGEMENT,
levels=c("NM","SF","BF","HF"))
mm <- model.matrix(~MANAGEMENT,data=dune)
head(mm)
mm <- data.frame(mm)
dune.adonis <- adonis(dune.dist~MANAGEMENTBF+MANAGEMENTHF+MANAGEMENTSF,data=mm)
dune.adonis
curdies <- read.csv('curdies.csv',strip.white=T)
png(file='junk.png',width=10,height=10,units='cm',res=400)
ggplot(curdies, aes(y=DUGESIA,x=SEASON)) + geom_boxplot() + facet_wrap(~SITE)
png(file='junk.png',width=10,height=10,units='cm',res=400)
ggplot(curdies, aes(y=DUGESIA,x=SEASON)) + geom_boxplot() + facet_wrap(~SITE)
getwd()
postscritp(file='junk2.png',width=10,height=10,paper='special',horizontal=FALSE)
postscript(file='junk2.png',width=10,height=10,paper='special',horizontal=FALSE)
def.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
png(file='junk.png',width=10,height=10,units='cm',res=400)
ggplot(curdies, aes(y=DUGESIA,x=SEASON)) + geom_boxplot() + facet_wrap(~SITE)
postscript(file='junk2.png',width=10,height=10,paper='special',horizontal=FALSE)
g1
pdf(file='junk3.png',width=10,height=10,paper='special',units='cm')
pdf(file='junk3.png',width=5,height=5,paper='special')
g1
pdf(file='junk3.pdf',width=5,height=5,paper='special')
g1
pdf(file='junk3.pdf',width=400,height=400,paper='special')
g1
